# Generated by Django 2.2.7 on 2019-12-06 00:29

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [("companies", "0002_auto_20191204_0323")]

    operations = [
        migrations.CreateModel(
            name="Fruit",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("label", models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name="Vegetable",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name="Person",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("_id", models.CharField(max_length=128, unique=True)),
                ("index", models.IntegerField(unique=True)),
                ("guid", models.CharField(max_length=128, unique=True)),
                ("has_died", models.BooleanField()),
                ("balance", models.DecimalField(decimal_places=2, max_digits=10)),
                ("picture", models.URLField()),
                ("age", models.IntegerField()),
                ("eyeColor", models.CharField(max_length=32)),
                ("name", models.CharField(max_length=128)),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female"), ("N", "No response")],
                        max_length=2,
                    ),
                ),
                ("email", models.EmailField(max_length=254)),
                ("phone", models.CharField(max_length=128)),
                ("address", models.CharField(max_length=256)),
                ("about", models.TextField()),
                ("registered", models.DateTimeField()),
                ("greeting", models.CharField(max_length=256)),
                (
                    "company",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="companies.Company",
                    ),
                ),
                ("favouriteFruits", models.ManyToManyField(to="people.Fruit")),
                ("favouriteVegetables", models.ManyToManyField(to="people.Vegetable")),
                (
                    "friends",
                    models.ManyToManyField(
                        blank=True,
                        null=True,
                        related_name="_person_friends_+",
                        to="people.Person",
                    ),
                ),
                ("tags", models.ManyToManyField(to="people.Tag")),
            ],
        ),
    ]
